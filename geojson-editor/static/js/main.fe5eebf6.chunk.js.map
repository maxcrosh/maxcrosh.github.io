{"version":3,"sources":["components/MapContainer/style.js","components/MapContainer/index.js","geometryOps.js","components/GeocoderSearch/style.js","components/GeocoderSearch/index.js","components/CodeEditor/index.js","components/App/style.js","components/App/index.js","config.js","reportWebVitals.js","index.js"],"names":["MapContainerStyled","styled","div","MapContainer","props","apikey","map","setMap","geojsonData","mapRef","useRef","useEffect","platform","H","service","Platform","layers","createDefaultLayers","tileLayer","getMapTileService","type","createTileLayer","setMin","Map","current","pixelRatio","window","devicePixelRatio","center","lat","lng","zoom","mapevents","Behavior","MapEvents","disable","Feature","FRACTIONAL_ZOOM","ui","UI","mapSettingsControl","MapSettingsControl","baseLayers","label","layer","raster","normal","satellite","basenight","xbasenight","alignment","addControl","zoomControl","ZoomControl","fractionalZoom","zoomRectangle","ZoomRectangle","scaleBar","ScaleBar","addEventListener","getViewPort","resize","removeObjects","getObjects","geojsonLayer","Group","addObject","data","JSON","parse","reader","geojson","Reader","parseData","addObjects","getParsedObjects","err","console","log","ref","SearchInput","input","GeocoderSearch","placeholder","CodeEditor","value","setGeojson","mode","theme","fontSize","width","height","name","editorProps","$blockScrolling","setOptions","useWorker","onChange","json_data","parsedJSON","message","validateJSON","MainContainer","MapSection","EditorSection","MapNavbar","BrandContainer","Label","SearchContainer","App","initialGeojson","stringify","features","useState","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe5eebf6.chunk.js","sourcesContent":["import styled from 'styled-components/macro'\r\n\r\nexport const MapContainerStyled = styled.div`\r\n    height: calc(100% - var(--navbar-height));\r\n    width: 100%;\r\n    margin: 0px;\r\n`","// Node modules\r\nimport React, { useRef, useEffect } from 'react'\r\nimport H from \"@here/maps-api-for-javascript\"\r\n\r\n// Geometry operations\r\nimport { createLayer } from '../../geometryOps'\r\n\r\n// Styled components\r\nimport { MapContainerStyled } from './style'\r\n\r\nexport const MapContainer = props => {\r\n    const { \r\n        apikey,\r\n        map,\r\n        setMap,\r\n        geojsonData,\r\n    } = props\r\n\r\n    const mapRef = useRef()\r\n\r\n    useEffect(() => {\r\n        if (!map) {\r\n            const platform = new H.service.Platform({\r\n                apikey: apikey\r\n            })\r\n    \r\n            const layers = platform.createDefaultLayers()\r\n            \r\n            const tileService = platform.getMapTileService({type: 'base'})\r\n            const tileLayer = tileService.createTileLayer('maptile', 'reduced.day', 256, 'png8', {})\r\n            tileLayer.setMin(2)\r\n\r\n            const map = new H.Map(\r\n                mapRef.current,\r\n                tileLayer,\r\n                {\r\n                    pixelRatio: window.devicePixelRatio,\r\n                    center: {lat: 0, lng: 0},\r\n                    zoom: 2,\r\n                }\r\n            )\r\n\r\n            const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map))\r\n            behavior.disable(H.mapevents.Behavior.Feature.FRACTIONAL_ZOOM)\r\n\r\n            const ui = new H.ui.UI(map)\r\n\r\n            // Map default layers customization \r\n            const mapSettingsControl = new H.ui.MapSettingsControl({\r\n                baseLayers: [{\r\n                    label: 'Reduced map',\r\n                    layer: tileLayer\r\n                },\r\n                {\r\n                    label: 'Normal day',\r\n                    layer: layers.raster.normal.map\r\n                },\r\n                {\r\n                    label: 'Satellite',\r\n                    layer: layers.raster.satellite.map\r\n                }, \r\n                {\r\n                    label: 'Normal night',\r\n                    layer: layers.raster.normal.basenight\r\n                }, \r\n                {\r\n                    label: 'Base night',\r\n                    layer: layers.raster.normal.xbasenight\r\n                }],\r\n                alignment: \"right-bottom\"\r\n            })\r\n    \r\n            ui.addControl('mapsettings', mapSettingsControl)\r\n\r\n            // Zoom Control\r\n            const zoomControl = new H.ui.ZoomControl({fractionalZoom: false, alignment: \"right-middle\"})\r\n            ui.addControl('zoom', zoomControl)\r\n\r\n            // DZoom rectange\r\n            const zoomRectangle = new H.ui.ZoomRectangle({alignment: \"right-middle\"})\r\n            ui.addControl('zoomrectange', zoomRectangle)\r\n\r\n            // Distance Measurement control\r\n            const scaleBar = new H.ui.ScaleBar({alignment: \"bottom-right\"})\r\n            ui.addControl('scalebar', scaleBar)\r\n\r\n            window.addEventListener('resize', () => map.getViewPort().resize())\r\n            \r\n            setMap(map)\r\n        }\r\n    }, [map, setMap, apikey])\r\n\r\n    if (map) {\r\n        map.removeObjects(map.getObjects())\r\n\r\n        const geojsonLayer = createLayer()\r\n        map.addObject(geojsonLayer)\r\n        \r\n        try {\r\n            let data = JSON.parse(geojsonData)\r\n\r\n            let reader = new H.data.geojson.Reader()\r\n            reader.parseData(data)\r\n\r\n            geojsonLayer.addObjects(reader.getParsedObjects());\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    return <MapContainerStyled ref={mapRef}/>\r\n}","import H from \"@here/maps-api-for-javascript\"\r\n\r\nexport const createLayer = () => new H.map.Group()\r\n\r\nexport const createMarker = (lat, lng, attrs={}) => {\r\n    const marker = new H.map.Marker({lat: lat, lng: lng})\r\n    marker.setData(attrs)\r\n    return marker\r\n}\r\n\r\n// const createPolyline = (lat, lng, attrs) => {\r\n//     const marker = new H.map.Marker({lat: lat, lng: lng})\r\n//     marker.setData(attrs)\r\n//     return marker\r\n// }","import styled from \"styled-components/macro\"\r\n\r\nexport const SearchInput = styled.input`\r\n    outline: none;\r\n    border: none;\r\n    margin-left: 10px;\r\n    width: 225px;\r\n    font-size: 14px;\r\n    border-bottom: 1px solid black;\r\n`","import React from 'react'\r\n\r\nimport {\r\n    SearchInput,\r\n} from './style'\r\n\r\nexport const GeocoderSearch = props => {\r\n    const { placeholder } = props\r\n    \r\n    return <SearchInput placeholder={placeholder}/>\r\n}","import React from 'react'\r\nimport AceEditor from \"react-ace\"\r\n\r\nimport \"ace-builds/src-noconflict/mode-json\"\r\nimport \"ace-builds/src-noconflict/theme-tomorrow\"\r\n\r\nexport const CodeEditor = props => {\r\n    const {\r\n      value,\r\n      setGeojson,\r\n    } = props\r\n\r\n    const validateJSON = json_data => {\r\n      try {\r\n        let parsedJSON = JSON.parse(json_data)\r\n        console.log('JSON successfully parsed')\r\n        return parsedJSON\r\n  \r\n      } catch (err) {\r\n        console.log(err.message)\r\n        return false\r\n      }\r\n    } \r\n\r\n    const onChange = json_data => {\r\n      console.log(json_data)\r\n      validateJSON(json_data)\r\n      setGeojson(json_data)\r\n    }\r\n\r\n    return (\r\n        <AceEditor\r\n          mode=\"json\"\r\n          theme=\"tomorrow\"\r\n          fontSize={15}\r\n          width='100%'\r\n          height='100%'\r\n          name=\"json_code_editor\"\r\n          editorProps={{ $blockScrolling: true }}\r\n          setOptions={{ useWorker: false }}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n    )\r\n}","import styled from 'styled-components/macro'\r\n\r\nexport const MainContainer = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 1fr;\r\n    grid-template-columns: 5fr 2fr;\r\n    // grid-gap: 0.5vw;\r\n    height: 100vh;\r\n    width: 100vw;\r\n`\r\n\r\nexport const MapSection = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    width: 100%;\r\n`\r\n\r\nexport const EditorSection = styled.div`\r\n\r\n`\r\n\r\nexport const MapNavbar = styled.div`\r\n    display: flex;\r\n    height: 50px;\r\n    width: 100%;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    box-shadow: -12px -2px 8px 1px #696969;\r\n    z-index: 2;\r\n`\r\nexport const BrandContainer = styled.div`\r\n    display: flex;\r\n    margin-left: 10px;\r\n`\r\n\r\nexport const Label = styled.div`\r\n    font-weight: bold;\r\n    font-size: 15px;\r\n    margin: 0px 3px;\r\n`\r\n\r\nexport const SearchContainer = styled.div`\r\n    display: flex;\r\n    margin-right: 10px;\r\n`","// Node modules\nimport React, { useState } from 'react'\n\n// Custom components\nimport { MapContainer } from '../MapContainer'\nimport { GeocoderSearch } from '../GeocoderSearch'\nimport { CodeEditor } from '../CodeEditor'\n\n// Config\nimport { API_KEY } from '../../config'\n\n// Styled components\nimport { \n  MainContainer,\n  MapSection, \n  EditorSection, \n  MapNavbar,\n  BrandContainer,\n  SearchContainer,\n  Label,\n} from './style'\n\n// Icons\nimport {\n  IoMapSharp,\n  IoSearchSharp,\n} from 'react-icons/io5'\n\nexport const App = props => {\n  \n  const initialGeojson = JSON.stringify({ \n    type: \"FeatureCollection\",\n    features: []\n  }, null, 2)\n\n  const [map, setMap] = useState()\n  const [geojson, setGeojson] = useState(initialGeojson)\n\n  const icon_size = 20\n\n  return (\n    <MainContainer>\n      <MapSection>\n        <MapNavbar>\n          <BrandContainer>\n            <IoMapSharp size={icon_size}/>\n            <Label>Geojson Editor</Label>\n          </BrandContainer>\n          <SearchContainer>\n            <IoSearchSharp size={icon_size}/>\n            <GeocoderSearch placeholder='Address search'/>\n          </SearchContainer>\n        </MapNavbar>\n        <MapContainer \n          apikey={API_KEY}\n          map={map}\n          geojsonData={geojson}\n          setMap={setMap}\n        />\n      </MapSection>\n      <EditorSection>\n        <CodeEditor \n          value={geojson}\n          setGeojson={setGeojson}\n        />\n      </EditorSection>\n    </MainContainer>\n  )\n}\n","export const API_KEY = 'UjNuFEnljA0mA3LsZxwXIBf_MR0Dr9o2cUc-F1-8wHs'","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './components/App'\nimport reportWebVitals from './reportWebVitals'\n\nimport './assets/css/index.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}